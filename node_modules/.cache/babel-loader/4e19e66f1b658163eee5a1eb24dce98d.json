{"ast":null,"code":"var _jsxFileName = \"/Users/veronikamitichashvili/Desktop/OL-React-course/todo-app/ol-academy-react-todo/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Todo.scss\";\nimport { Error } from \"./Error\";\nimport Task from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todo() {\n  _s();\n\n  let id = 0;\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [editError, setEditError] = useState(\"\");\n  const [currValue, setCurrValue] = useState(\"\");\n  const [editValue, setEditValue] = useState(\"\");\n  const [editMode, setEditMode] = useState(false);\n  const [currIndex, setCurrIndex] = useState(null);\n\n  function isValueValid(value) {\n    if (value === \"\") {\n      editMode ? setEditError(\"Please enter in a task\") : setError(\"Please enter in a task\");\n      return false;\n    } else if (!editMode && tasks.length !== 0 && tasks.some(el => el.name === value)) {\n      setError(\"The task already exists\");\n      return false;\n    }\n\n    return true;\n  }\n\n  const onClickHandle = () => {\n    if (isValueValid(currValue)) {\n      setTasks([...tasks, {\n        id: id,\n        name: currValue,\n        isDone: false\n      }]);\n      setCurrValue(\"\");\n      setError(\"\");\n    }\n  };\n\n  const onCheck = index => {\n    let newTasks = tasks;\n    newTasks[index].isDone = !tasks[index].isDone;\n    setTasks(newTasks); // [\n    //   ...newTasks.filter((el) => el.isDone === false),\n    //   ...newTasks.filter((el) => el.isDone === true),\n    // ]\n  };\n\n  const moveDown = index => {\n    let swapIndex = index + 1;\n\n    if (swapIndex === tasks.length) {\n      swapIndex = 0;\n    }\n\n    move(index, swapIndex);\n  };\n\n  const moveUp = index => {\n    console.log(\"moveUp\");\n    let swapIndex = index - 1;\n\n    if (index === 0) {\n      swapIndex = tasks.length - 1;\n    }\n\n    move(index, swapIndex);\n  };\n\n  const move = (index, swapIndex) => {\n    console.log(\"move\");\n    let temp = tasks[index];\n    let tempTasks = tasks;\n    tempTasks[index] = tempTasks[swapIndex];\n    tempTasks[swapIndex] = temp;\n    console.log(tempTasks);\n    setTasks(tempTasks);\n    console.log(tasks);\n  };\n\n  const onEdit = index => {\n    setEditMode(true);\n    setCurrIndex(index);\n    setEditValue(tasks[index].name);\n  };\n\n  const onEditHandle = e => {\n    setEditValue(e.target.value);\n  };\n\n  const onEditClick = () => {\n    if (isValueValid(editValue)) {\n      let newTasks = tasks;\n      newTasks[currIndex].name = editValue;\n      setEditMode(false);\n      setCurrIndex(null);\n      setEditValue(\"\");\n      setTasks(newTasks);\n      setEditError(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your task here...\",\n        value: currValue,\n        onChange: e => {\n          setCurrValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickHandle,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"additianal-btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-2\",\n        onClick: () => setTasks([]),\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-2\",\n        onClick: () => setTasks(tasks.filter(el => el.isDone === false)),\n        children: \"Delete Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-2\",\n        onClick: () => setTasks(tasks.filter(el => el.isDone === true)),\n        children: \"Delete Not Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: [editMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"black\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editValue,\n            onChange: onEditHandle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Error, {\n            error: editError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onEditClick,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-2\",\n            onClick: () => {\n              setEditMode(false);\n              setEditError(\"\");\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            task: task // index={index}\n            ,\n            onCheck: id => onCheck(id),\n            onEdit: id => onEdit(id),\n            onDeleteTask: id => setTasks(tasks.filter(el => el.id !== id)),\n            moveUp: id => {\n              moveUp(id);\n            },\n            moveDown: id => {\n              moveDown(id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, \"task\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"q0kSkCft1K6w/9jRfiwGPnvCdUw=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/veronikamitichashvili/Desktop/OL-React-course/todo-app/ol-academy-react-todo/src/components/Todo.jsx"],"names":["React","useState","Error","Task","Todo","id","tasks","setTasks","error","setError","editError","setEditError","currValue","setCurrValue","editValue","setEditValue","editMode","setEditMode","currIndex","setCurrIndex","isValueValid","value","length","some","el","name","onClickHandle","isDone","onCheck","index","newTasks","moveDown","swapIndex","move","moveUp","console","log","temp","tempTasks","onEdit","onEditHandle","e","target","onEditClick","filter","map","task"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Todo.scss\";\nimport { Error } from \"./Error\";\nimport Task from \"./Task\";\n\nexport function Todo() {\n  let id = 0;\n\n  const [tasks, setTasks] = useState([]);\n\n  const [error, setError] = useState(\"\");\n  const [editError, setEditError] = useState(\"\");\n\n  const [currValue, setCurrValue] = useState(\"\");\n  const [editValue, setEditValue] = useState(\"\");\n\n  const [editMode, setEditMode] = useState(false);\n\n  const [currIndex, setCurrIndex] = useState(null);\n\n  function isValueValid(value) {\n    if (value === \"\") {\n      editMode\n        ? setEditError(\"Please enter in a task\")\n        : setError(\"Please enter in a task\");\n\n      return false;\n    } else if (\n      !editMode &&\n      tasks.length !== 0 &&\n      tasks.some((el) => el.name === value)\n    ) {\n      setError(\"The task already exists\");\n\n      return false;\n    }\n\n    return true;\n  }\n\n  const onClickHandle = () => {\n    if (isValueValid(currValue)) {\n      setTasks([...tasks, { id: id, name: currValue, isDone: false }]);\n      setCurrValue(\"\");\n      setError(\"\");\n      \n    }\n  };\n\n  const onCheck = (index) => {\n    let newTasks = tasks;\n    newTasks[index].isDone = !tasks[index].isDone;\n    setTasks(newTasks);\n\n    // [\n    //   ...newTasks.filter((el) => el.isDone === false),\n    //   ...newTasks.filter((el) => el.isDone === true),\n    // ]\n  };\n\n  const moveDown = (index) => {\n    let swapIndex = index + 1;\n    if (swapIndex === tasks.length) {\n      swapIndex = 0;\n    }\n    move(index, swapIndex);\n  };\n\n  const moveUp = (index) => {\n    console.log(\"moveUp\");\n    let swapIndex = index - 1;\n    if (index === 0) {\n      swapIndex = tasks.length - 1;\n    }\n    move(index, swapIndex);\n  };\n\n  const move = (index, swapIndex) => {\n    console.log(\"move\");\n    let temp = tasks[index];\n    let tempTasks = tasks;\n    tempTasks[index] = tempTasks[swapIndex];\n    tempTasks[swapIndex] = temp;\n\n    console.log(tempTasks);\n    setTasks(tempTasks);\n\n    console.log(tasks);\n  };\n\n  const onEdit = (index) => {\n    setEditMode(true);\n    setCurrIndex(index);\n    setEditValue(tasks[index].name);\n  };\n\n  const onEditHandle = (e) => {\n    setEditValue(e.target.value);\n  };\n\n  const onEditClick = () => {\n    if (isValueValid(editValue)) {\n      let newTasks = tasks;\n      newTasks[currIndex].name = editValue;\n\n      setEditMode(false);\n      setCurrIndex(null);\n      setEditValue(\"\");\n      setTasks(newTasks);\n      setEditError(\"\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"input\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter your task here...\"\n          value={currValue}\n          onChange={(e) => {\n            setCurrValue(e.target.value);\n          }}\n        />\n        <button onClick={onClickHandle}>Add</button>\n      </div>\n      <Error error={error} />\n      <div className=\"additianal-btns\">\n        <button className=\"btn-2\" onClick={() => setTasks([])}>\n          Delete All\n        </button>\n        <button\n          className=\"btn-2\"\n          onClick={() => setTasks(tasks.filter((el) => el.isDone === false))}\n        >\n          Delete Done\n        </button>\n        <button\n          className=\"btn-2\"\n          onClick={() => setTasks(tasks.filter((el) => el.isDone === true))}\n        >\n          Delete Not Done\n        </button>\n      </div>\n      <div className=\"tasks-container\">\n        {editMode === true && (\n          <div className=\"black\">\n            <div className=\"overlay\">\n              <input type=\"text\" value={editValue} onChange={onEditHandle} />\n              <Error error={editError} />\n              <button onClick={onEditClick}>Edit</button>\n              <button\n                className=\"btn-2\"\n                onClick={() => {\n                  setEditMode(false);\n                  setEditError(\"\");\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        )}\n\n        <ul>\n          {tasks.map((task, index) => (\n            <li key={\"task\" + index}>\n              <Task\n                task={task}\n                // index={index}\n                onCheck={(id) => onCheck(id)}\n                onEdit={(id) => onEdit(id)}\n                onDeleteTask={(id) =>\n                  setTasks(tasks.filter((el) => el.id !== id))\n                }\n                moveUp={(id) => {\n                  moveUp(id);\n                }}\n                moveDown={(id) => {\n                  moveDown(id);\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}