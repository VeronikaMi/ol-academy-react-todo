{"ast":null,"code":"var _jsxFileName = \"/Users/veronikamitichashvili/Desktop/OL-React-course/todo-app/ol-academy-react-todo/src/components/Todo.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Todo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandle = e => {\n      this.setState({\n        currValue: e.target.value\n      });\n    };\n\n    this.isValueValid = value => {\n      if (value === \"\") {\n        this.state.editMode ? this.setState({\n          editError: \"Please enter in a task\"\n        }) : this.setState({\n          editError: \"Please enter in a task\"\n        });\n        return false;\n      } else if (this.state.tasks.length !== 0 && this.state.tasks.some(el => el.name === value)) {\n        this.setState({\n          error: \"The task already exists\"\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onClickHandle = () => {\n      if (isValueValid(this.state.currValue)) {\n        console.log(this.state.currValue);\n        this.setState({\n          tasks: [...this.state.tasks, {\n            name: this.state.currValue,\n            isDone: false\n          }],\n          currValue: \"\",\n          error: \"\"\n        });\n      }\n    };\n\n    this.onDeleteAll = () => {\n      this.setState({\n        tasks: []\n      });\n    };\n\n    this.onDeleteDone = () => {\n      this.setState({\n        tasks: this.state.tasks.filter(el => el.isDone === false)\n      });\n    };\n\n    this.onDeleteNotDone = () => {\n      this.setState({\n        tasks: this.state.tasks.filter(el => el.isDone === true)\n      });\n    };\n\n    this.onDeleteTask = index => {\n      this.setState({\n        tasks: this.state.tasks.filter((el, i) => i !== index)\n      });\n    };\n\n    this.onCheck = index => {\n      let newTasks = this.state.tasks;\n      newTasks[index].isDone = !this.state.tasks[index].isDone;\n      this.setState({\n        tasks: newTasks\n      }); // [\n      //   ...newTasks.filter((el) => el.isDone === false),\n      //   ...newTasks.filter((el) => el.isDone === true),\n      // ]\n    };\n\n    this.moveDown = index => {\n      let swapIndex = index + 1;\n\n      if (swapIndex === this.state.tasks.length) {\n        swapIndex = 0;\n      }\n\n      this.move(index, swapIndex);\n    };\n\n    this.moveUp = index => {\n      let swapIndex = index - 1;\n\n      if (index === 0) {\n        swapIndex = this.state.tasks.length - 1;\n      }\n\n      this.move(index, swapIndex);\n    };\n\n    this.move = (index, swapIndex) => {\n      let temp = this.state.tasks[index];\n      let tempTasks = this.state.tasks;\n      tempTasks[index] = tempTasks[swapIndex];\n      tempTasks[swapIndex] = temp;\n      this.setState({\n        tasks: tempTasks\n      });\n    };\n\n    this.onEdit = index => {\n      this.setState({\n        editMode: true,\n        currIndex: index,\n        editValue: this.state.tasks[index].name\n      });\n    };\n\n    this.onEditHandle = e => {\n      this.setState({\n        editValue: e.target.value\n      });\n    };\n\n    this.onEditClick = () => {\n      let newTasks = this.state.tasks;\n      newTasks[this.state.currIndex].name = this.state.editValue;\n      this.setState({\n        editMode: false,\n        currIndex: null,\n        editValue: \"\",\n        tasks: newTasks\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      error: \"\",\n      currValue: \"\",\n      editMode: false,\n      currIndex: null,\n      editValue: \"\",\n      editError: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.state.tasks);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your task here...\",\n          value: this.state.currValue,\n          onChange: this.onChangeHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onClickHandle,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: [\" \", this.state.error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"additianal-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-2\",\n          onClick: this.onDeleteAll,\n          children: \"Delete All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-2\",\n          onClick: this.onDeleteDone,\n          children: \"Delete Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-2\",\n          onClick: this.onDeleteNotDone,\n          children: \"Delete Not Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-container\",\n        children: [this.state.editMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"black\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.editValue,\n              onChange: this.onEditHandle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.onEditClick,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-2\",\n              onClick: () => {\n                this.setState({\n                  editMode: false\n                });\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task\" + (task.isDone ? \" done\" : \"\"),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  defaultChecked: task.isDone,\n                  onChange: () => {\n                    this.onCheck(index);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text\",\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"button\",\n                  onClick: () => {\n                    this.onEdit(index);\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"button delete\",\n                  onClick: () => {\n                    this.onDeleteTask(index);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"button arrow\",\n                  onClick: () => {\n                    this.moveUp(index);\n                  },\n                  children: \"\\u2191\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"button arrow\",\n                  onClick: () => {\n                    this.moveDown(index);\n                  },\n                  children: \"\\u2193\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, \"task\" + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/veronikamitichashvili/Desktop/OL-React-course/todo-app/ol-academy-react-todo/src/components/Todo.jsx"],"names":["React","Component","Todo","constructor","props","onChangeHandle","e","setState","currValue","target","value","isValueValid","state","editMode","editError","tasks","length","some","el","name","error","onClickHandle","console","log","isDone","onDeleteAll","onDeleteDone","filter","onDeleteNotDone","onDeleteTask","index","i","onCheck","newTasks","moveDown","swapIndex","move","moveUp","temp","tempTasks","onEdit","currIndex","editValue","onEditHandle","onEditClick","render","map","task"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Todo.css\";\n\nexport class Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      error: \"\",\n      currValue: \"\",\n      editMode: false,\n      currIndex: null,\n      editValue: \"\",\n      editError:\"\"\n    };\n  }\n\n  onChangeHandle = (e) => {\n    this.setState({ currValue: e.target.value });\n  };\n\n  isValueValid = (value) =>{\n    if (value === \"\") {\n      this.state.editMode? this.setState({ editError: \"Please enter in a task\" }): this.setState({ editError: \"Please enter in a task\" });\n      return false;\n    } else if (\n      this.state.tasks.length !== 0 &&\n      this.state.tasks.some((el) => el.name === value)\n    ) {\n      this.setState({ error: \"The task already exists\" });\n      return false;\n    }\n\n    return true;\n  }\n\n  onClickHandle = () => {\n    if (isValueValid(this.state.currValue)) {\n      console.log(this.state.currValue);\n      this.setState({\n        tasks: [\n          ...this.state.tasks,\n          { name: this.state.currValue, isDone: false },\n        ],\n        currValue: \"\",\n        error: \"\",\n      });\n    }\n  };\n\n  onDeleteAll = () => {\n    this.setState({\n      tasks: [],\n    });\n  };\n\n  onDeleteDone = () => {\n    this.setState({\n      tasks: this.state.tasks.filter((el) => el.isDone === false),\n    });\n  };\n\n  onDeleteNotDone = () => {\n    this.setState({\n      tasks: this.state.tasks.filter((el) => el.isDone === true),\n    });\n  };\n\n  onDeleteTask = (index) => {\n    this.setState({\n      tasks: this.state.tasks.filter((el, i) => i !== index),\n    });\n  };\n\n  onCheck = (index) => {\n    let newTasks = this.state.tasks;\n    newTasks[index].isDone = !this.state.tasks[index].isDone;\n    this.setState({\n      tasks: newTasks,\n    });\n\n    // [\n    //   ...newTasks.filter((el) => el.isDone === false),\n    //   ...newTasks.filter((el) => el.isDone === true),\n    // ]\n  };\n\n  moveDown = (index) => {\n    let swapIndex = index + 1;\n    if (swapIndex === this.state.tasks.length) {\n      swapIndex = 0;\n    }\n    this.move(index, swapIndex);\n  };\n\n  moveUp = (index) => {\n    let swapIndex = index - 1;\n    if (index === 0) {\n      swapIndex = this.state.tasks.length - 1;\n    }\n    this.move(index, swapIndex);\n  };\n\n  move = (index, swapIndex) => {\n    let temp = this.state.tasks[index];\n    let tempTasks = this.state.tasks;\n    tempTasks[index] = tempTasks[swapIndex];\n    tempTasks[swapIndex] = temp;\n\n    this.setState({\n      tasks: tempTasks,\n    });\n  };\n\n  onEdit = (index) => {\n    this.setState({\n      editMode: true,\n      currIndex: index,\n      editValue : this.state.tasks[index].name\n    });\n  };\n\n  onEditHandle = (e) => {\n    this.setState({\n      editValue: e.target.value,\n    });\n  };\n\n  onEditClick = ()=>{\n    let newTasks = this.state.tasks;\n    newTasks[this.state.currIndex].name = this.state.editValue;\n    this.setState({\n      editMode: false,\n      currIndex: null,\n      editValue : \"\",\n      tasks : newTasks\n    });\n  }\n\n  render() {\n    console.log(this.state.tasks);\n    return (\n      <div className=\"container\">\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter your task here...\"\n            value={this.state.currValue}\n            onChange={this.onChangeHandle}\n          />\n          <button onClick={this.onClickHandle}>Add</button>\n        </div>\n        <div className=\"error\">\n          <p className=\"error-text\"> {this.state.error} </p>\n        </div>\n        <div className=\"additianal-btns\">\n          <button className=\"btn-2\" onClick={this.onDeleteAll}>\n            Delete All\n          </button>\n          <button className=\"btn-2\" onClick={this.onDeleteDone}>\n            Delete Done\n          </button>\n          <button className=\"btn-2\" onClick={this.onDeleteNotDone}>\n            Delete Not Done\n          </button>\n        </div>\n        <div className=\"tasks-container\">\n          {this.state.editMode === true && (\n            <div className=\"black\">\n              <div className=\"overlay\">\n                <input\n                  type=\"text\"\n                  value={this.state.editValue}\n                  onChange={this.onEditHandle}\n                />\n                <button onClick={this.onEditClick}>Edit</button>\n                <button\n                  className=\"btn-2\"\n                  onClick={() => {\n                    this.setState({ editMode: false });\n                  }}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          )}\n\n          <ul>\n            {this.state.tasks.map((task, index) => (\n              <li key={\"task\" + index}>\n                <div className={\"task\" + (task.isDone ? \" done\" : \"\")}>\n                  <div className=\"left-text\">\n                    <input\n                      type=\"checkbox\"\n                      defaultChecked={task.isDone}\n                      onChange={() => {\n                        this.onCheck(index);\n                      }}\n                    />\n                    <p className=\"text\">{task.name}</p>\n                  </div>\n\n                  <div className=\"btn-container\">\n                    <p\n                      className=\"button\"\n                      onClick={() => {\n                        this.onEdit(index);\n                      }}\n                    >\n                      Edit\n                    </p>\n                    <p\n                      className=\"button delete\"\n                      onClick={() => {\n                        this.onDeleteTask(index);\n                      }}\n                    >\n                      Delete\n                    </p>\n                    <p\n                      className=\"button arrow\"\n                      onClick={() => {\n                        this.moveUp(index);\n                      }}\n                    >\n                      ↑\n                    </p>\n                    <p\n                      className=\"button arrow\"\n                      onClick={() => {\n                        this.moveDown(index);\n                      }}\n                    >\n                      ↓\n                    </p>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}