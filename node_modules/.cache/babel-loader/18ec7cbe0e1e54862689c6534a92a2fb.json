{"ast":null,"code":"var _jsxFileName = \"/Users/veronikamitichashvili/Desktop/OL-React-course/todo-app/ol-academy-react-todo/src/components/Todo.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Todo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandle = e => {\n      this.setState({\n        currValue: e.target.value\n      });\n    };\n\n    this.onClickHandle = () => {\n      if (this.state.currValue === \"\") {\n        this.setState({\n          error: \"Please enter in a task\"\n        });\n      } else if (this.state.tasks.length !== 0 && this.state.tasks.some(el => el.name === this.state.currValue)) {\n        this.setState({\n          error: \"The task already exists\"\n        });\n      } else {\n        console.log(this.state.currValue);\n        this.setState({\n          tasks: [...this.state.tasks, {\n            name: this.state.currValue,\n            isDone: false\n          }],\n          currValue: \"\",\n          error: \"\"\n        });\n      }\n    };\n\n    this.onDeleteAll = () => {\n      this.setState({\n        tasks: []\n      });\n    };\n\n    this.onDeleteDone = () => {\n      this.setState({\n        tasks: this.state.tasks.filter(el => el.isDone === false)\n      });\n    };\n\n    this.onDeleteNotDone = () => {\n      this.setState({\n        tasks: this.state.tasks.filter(el => el.isDone === true)\n      });\n    };\n\n    this.onDeleteTask = index => {\n      this.setState({\n        tasks: this.state.tasks.filter((el, i) => i !== index)\n      });\n    };\n\n    this.onCheck = index => {\n      let newTasks = this.state.tasks;\n      newTasks[index].isDone = !this.state.tasks[index].isDone;\n      this.setState({\n        tasks: newTasks\n      }); // [\n      //   ...newTasks.filter((el) => el.isDone === false),\n      //   ...newTasks.filter((el) => el.isDone === true),\n      // ]\n    };\n\n    this.moveDown = index => {\n      let temp = this.state.tasks[inde];\n    };\n\n    this.state = {\n      tasks: [],\n      error: \"\",\n      currValue: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.state.tasks);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your task here...\",\n          value: this.state.currValue,\n          onChange: this.onChangeHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onClickHandle,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: [\" \", this.state.error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"additianal-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-2\",\n          onClick: this.onDeleteAll,\n          children: \"Delete All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-2\",\n          onClick: this.onDeleteDone,\n          children: \"Delete Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-2\",\n          onClick: this.onDeleteNotDone,\n          children: \"Delete Not Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task\" + (task.isDone ? \" done\" : \"\"),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  defaultChecked: task.isDone,\n                  onChange: () => {\n                    this.onCheck(index);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text\",\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"button\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"button delete\",\n                  onClick: () => {\n                    this.onDeleteTask(index);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"button arrow\",\n                  onClick: () => {\n                    this.moveUp(index);\n                  },\n                  children: \"\\u2191\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"button arrow\",\n                  onClick: () => {\n                    this.moveDown(index);\n                  },\n                  children: \"\\u2193\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, \"task\" + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/veronikamitichashvili/Desktop/OL-React-course/todo-app/ol-academy-react-todo/src/components/Todo.jsx"],"names":["React","Component","Todo","constructor","props","onChangeHandle","e","setState","currValue","target","value","onClickHandle","state","error","tasks","length","some","el","name","console","log","isDone","onDeleteAll","onDeleteDone","filter","onDeleteNotDone","onDeleteTask","index","i","onCheck","newTasks","moveDown","temp","inde","render","map","task","moveUp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Todo.css\";\n\nexport class Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      error: \"\",\n      currValue: \"\",\n    };\n  }\n\n  onChangeHandle = (e) => {\n    this.setState({ currValue: e.target.value });\n  };\n\n  onClickHandle = () => {\n    if (this.state.currValue === \"\") {\n      this.setState({ error: \"Please enter in a task\" });\n    } else if (\n      this.state.tasks.length !== 0 &&\n      this.state.tasks.some((el) => el.name === this.state.currValue)\n    ) {\n      this.setState({ error: \"The task already exists\" });\n    } else {\n      console.log(this.state.currValue);\n      this.setState({\n        tasks: [\n          ...this.state.tasks,\n          { name: this.state.currValue, isDone: false },\n        ],\n        currValue: \"\",\n        error: \"\",\n      });\n    }\n  };\n\n  onDeleteAll = () => {\n    this.setState({\n      tasks: [],\n    });\n  };\n\n  onDeleteDone = () => {\n    this.setState({\n      tasks: this.state.tasks.filter((el) => el.isDone === false),\n    });\n  };\n\n  onDeleteNotDone = () => {\n    this.setState({\n      tasks: this.state.tasks.filter((el) => el.isDone === true),\n    });\n  };\n\n  onDeleteTask = (index) => {\n    this.setState({\n      tasks: this.state.tasks.filter((el, i) => i !== index),\n    });\n  };\n\n  onCheck = (index) => {\n    let newTasks = this.state.tasks;\n    newTasks[index].isDone = !this.state.tasks[index].isDone;\n    this.setState({\n      tasks: newTasks,\n    });\n\n    // [\n    //   ...newTasks.filter((el) => el.isDone === false),\n    //   ...newTasks.filter((el) => el.isDone === true),\n    // ]\n  };\n\n  moveDown = (index)=>{\n    let temp = this.state.tasks[inde]\n  }\n\n  render() {\n    console.log(this.state.tasks);\n    return (\n      <div className=\"container\">\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter your task here...\"\n            value={this.state.currValue}\n            onChange={this.onChangeHandle}\n          />\n          <button onClick={this.onClickHandle}>Add</button>\n        </div>\n        <div className=\"error\">\n          <p className=\"error-text\"> {this.state.error} </p>\n        </div>\n        <div className=\"additianal-btns\">\n          <button className=\"btn-2\" onClick={this.onDeleteAll}>\n            Delete All\n          </button>\n          <button className=\"btn-2\" onClick={this.onDeleteDone}>\n            Delete Done\n          </button>\n          <button className=\"btn-2\" onClick={this.onDeleteNotDone}>\n            Delete Not Done\n          </button>\n        </div>\n        <div className=\"tasks-container\">\n          <ul>\n            {this.state.tasks.map((task, index) => (\n              <li key={\"task\" + index}>\n                <div className={\"task\" + (task.isDone ? \" done\" : \"\")}>\n                  <div className=\"left-text\">\n                    <input\n                      type=\"checkbox\"\n                      defaultChecked={task.isDone}\n                      onChange={() => {\n                        this.onCheck(index);\n                      }}\n                    />\n                    <p className=\"text\">{task.name}</p>\n                  </div>\n\n                  <div className=\"btn-container\">\n                    <p className=\"button\">Edit</p>\n                    <p\n                      className=\"button delete\"\n                      onClick={() => {\n                        this.onDeleteTask(index);\n                      }}\n                    >\n                      Delete\n                    </p>\n                    <p className=\"button arrow\" onClick={()=>{this.moveUp(index)}}>↑</p>\n                    <p className=\"button arrow\" onClick={()=>{this.moveDown(index)}}>↓</p>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}