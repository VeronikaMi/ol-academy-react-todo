{"ast":null,"code":"var _jsxFileName = \"/Users/veronikamitichashvili/Desktop/OL-React-course/todo-app/ol-academy-react-todo/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Todo.scss\";\nimport { Error } from \"./Error\";\nimport Task from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todo() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [editError, setEditError] = useState(\"\");\n  const [currValue, setCurrValue] = useState(\"\");\n  const [editValue, setEditValue] = useState(\"\");\n  const [editMode, setEditMode] = useState(false);\n  const [currIndex, setCurrIndex] = useState(null);\n\n  onChangeHandle = e => {\n    this.setState({\n      currValue: e.target.value\n    });\n  };\n\n  isValueValid = value => {\n    if (value === \"\") {\n      this.state.editMode ? this.setState({\n        editError: \"Please enter in a task\"\n      }) : this.setState({\n        error: \"Please enter in a task\"\n      });\n      return false;\n    } else if (!this.state.editMode && this.state.tasks.length !== 0 && this.state.tasks.some(el => el.name === value)) {\n      this.setState({\n        error: \"The task already exists\"\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  onClickHandle = () => {\n    if (this.isValueValid(this.state.currValue)) {\n      console.log(this.state.currValue);\n      this.setState({\n        tasks: [...this.state.tasks, {\n          name: this.state.currValue,\n          isDone: false\n        }],\n        currValue: \"\",\n        error: \"\"\n      });\n    }\n  };\n\n  onDeleteAll = () => {\n    this.setState({\n      tasks: []\n    });\n  };\n\n  onDeleteDone = () => {\n    this.setState({\n      tasks: this.state.tasks.filter(el => el.isDone === false)\n    });\n  };\n\n  onDeleteNotDone = () => {\n    this.setState({\n      tasks: this.state.tasks.filter(el => el.isDone === true)\n    });\n  };\n\n  onDeleteTask = index => {\n    this.setState({\n      tasks: this.state.tasks.filter((el, i) => i !== index)\n    });\n  };\n\n  onCheck = index => {\n    let newTasks = this.state.tasks;\n    newTasks[index].isDone = !this.state.tasks[index].isDone;\n    this.setState({\n      tasks: newTasks\n    }); // [\n    //   ...newTasks.filter((el) => el.isDone === false),\n    //   ...newTasks.filter((el) => el.isDone === true),\n    // ]\n  };\n\n  moveDown = index => {\n    let swapIndex = index + 1;\n\n    if (swapIndex === this.state.tasks.length) {\n      swapIndex = 0;\n    }\n\n    this.move(index, swapIndex);\n  };\n\n  moveUp = index => {\n    let swapIndex = index - 1;\n\n    if (index === 0) {\n      swapIndex = this.state.tasks.length - 1;\n    }\n\n    this.move(index, swapIndex);\n  };\n\n  move = (index, swapIndex) => {\n    let temp = this.state.tasks[index];\n    let tempTasks = this.state.tasks;\n    tempTasks[index] = tempTasks[swapIndex];\n    tempTasks[swapIndex] = temp;\n    this.setState({\n      tasks: tempTasks\n    });\n  };\n\n  onEdit = index => {\n    this.setState({\n      editMode: true,\n      currIndex: index,\n      editValue: this.state.tasks[index].name\n    });\n  };\n\n  onEditHandle = e => {\n    this.setState({\n      editValue: e.target.value\n    });\n  };\n\n  onEditClick = () => {\n    if (this.isValueValid(this.state.editValue)) {\n      let newTasks = this.state.tasks;\n      newTasks[this.state.currIndex].name = this.state.editValue;\n      this.setState({\n        editMode: false,\n        currIndex: null,\n        editValue: \"\",\n        tasks: newTasks,\n        editError: \"\"\n      });\n    }\n  };\n\n  console.log(this.state.tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your task here...\",\n        value: this.state.currValue,\n        onChange: this.onChangeHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onClickHandle,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: this.state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"additianal-btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-2\",\n        onClick: this.onDeleteAll,\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-2\",\n        onClick: this.onDeleteDone,\n        children: \"Delete Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-2\",\n        onClick: this.onDeleteNotDone,\n        children: \"Delete Not Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: [this.state.editMode === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"black\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.editValue,\n            onChange: this.onEditHandle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Error, {\n            error: this.state.editError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onEditClick,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-2\",\n            onClick: () => {\n              this.setState({\n                editMode: false,\n                editError: \"\"\n              });\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            task: task,\n            index: index,\n            onCheck: e => this.onCheck(e),\n            onEdit: e => this.onEdit(e),\n            onDeleteTask: e => this.onDeleteTask(e),\n            moveUp: e => {\n              this.moveUp(e);\n            },\n            moveDown: e => {\n              this.moveDown(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, \"task\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"d4iLpeuaL7HyaZkhZ+QAGSzESVw=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/veronikamitichashvili/Desktop/OL-React-course/todo-app/ol-academy-react-todo/src/components/Todo.jsx"],"names":["React","useState","Error","Task","Todo","tasks","setTasks","error","setError","editError","setEditError","currValue","setCurrValue","editValue","setEditValue","editMode","setEditMode","currIndex","setCurrIndex","onChangeHandle","e","setState","target","value","isValueValid","state","length","some","el","name","onClickHandle","console","log","isDone","onDeleteAll","onDeleteDone","filter","onDeleteNotDone","onDeleteTask","index","i","onCheck","newTasks","moveDown","swapIndex","move","moveUp","temp","tempTasks","onEdit","onEditHandle","onEditClick","map","task"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport \"./Todo.scss\";\nimport { Error } from \"./Error\";\nimport Task from \"./Task\";\n\nexport function Todo() {\n  const [tasks, setTasks] = useState([]);\n\n  const [error, setError] = useState(\"\");\n  const [editError, setEditError] = useState(\"\");\n\n  const [currValue, setCurrValue] = useState(\"\");\n  const [editValue, setEditValue] = useState(\"\");\n\n  const [editMode,setEditMode] = useState(false);\n\n  const [currIndex, setCurrIndex] = useState(null);\n\n  onChangeHandle = (e) => {\n    this.setState({ currValue: e.target.value });\n  };\n\n  isValueValid = (value) => {\n    if (value === \"\") {\n      this.state.editMode\n        ? this.setState({ editError: \"Please enter in a task\" })\n        : this.setState({ error: \"Please enter in a task\" });\n\n      return false;\n    } else if (\n      !this.state.editMode &&\n      this.state.tasks.length !== 0 &&\n      this.state.tasks.some((el) => el.name === value)\n    ) {\n      this.setState({ error: \"The task already exists\" });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  onClickHandle = () => {\n    if (this.isValueValid(this.state.currValue)) {\n      console.log(this.state.currValue);\n      this.setState({\n        tasks: [\n          ...this.state.tasks,\n          { name: this.state.currValue, isDone: false },\n        ],\n        currValue: \"\",\n        error: \"\",\n      });\n    }\n  };\n\n  onDeleteAll = () => {\n    this.setState({\n      tasks: [],\n    });\n  };\n\n  onDeleteDone = () => {\n    this.setState({\n      tasks: this.state.tasks.filter((el) => el.isDone === false),\n    });\n  };\n\n  onDeleteNotDone = () => {\n    this.setState({\n      tasks: this.state.tasks.filter((el) => el.isDone === true),\n    });\n  };\n\n  onDeleteTask = (index) => {\n    this.setState({\n      tasks: this.state.tasks.filter((el, i) => i !== index),\n    });\n  };\n\n  onCheck = (index) => {\n    let newTasks = this.state.tasks;\n    newTasks[index].isDone = !this.state.tasks[index].isDone;\n    this.setState({\n      tasks: newTasks,\n    });\n\n    // [\n    //   ...newTasks.filter((el) => el.isDone === false),\n    //   ...newTasks.filter((el) => el.isDone === true),\n    // ]\n  };\n\n  moveDown = (index) => {\n    let swapIndex = index + 1;\n    if (swapIndex === this.state.tasks.length) {\n      swapIndex = 0;\n    }\n    this.move(index, swapIndex);\n  };\n\n  moveUp = (index) => {\n    let swapIndex = index - 1;\n    if (index === 0) {\n      swapIndex = this.state.tasks.length - 1;\n    }\n    this.move(index, swapIndex);\n  };\n\n  move = (index, swapIndex) => {\n    let temp = this.state.tasks[index];\n    let tempTasks = this.state.tasks;\n    tempTasks[index] = tempTasks[swapIndex];\n    tempTasks[swapIndex] = temp;\n\n    this.setState({\n      tasks: tempTasks,\n    });\n  };\n\n  onEdit = (index) => {\n    this.setState({\n      editMode: true,\n      currIndex: index,\n      editValue: this.state.tasks[index].name,\n    });\n  };\n\n  onEditHandle = (e) => {\n    this.setState({\n      editValue: e.target.value,\n    });\n  };\n\n  onEditClick = () => {\n    if (this.isValueValid(this.state.editValue)) {\n      let newTasks = this.state.tasks;\n      newTasks[this.state.currIndex].name = this.state.editValue;\n      this.setState({\n        editMode: false,\n        currIndex: null,\n        editValue: \"\",\n        tasks: newTasks,\n        editError: \"\",\n      });\n    }\n  };\n\n  console.log(this.state.tasks);\n  return (\n    <div className=\"container\">\n      <div className=\"input\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter your task here...\"\n          value={this.state.currValue}\n          onChange={this.onChangeHandle}\n        />\n        <button onClick={this.onClickHandle}>Add</button>\n      </div>\n      <Error error={this.state.error} />\n      <div className=\"additianal-btns\">\n        <button className=\"btn-2\" onClick={this.onDeleteAll}>\n          Delete All\n        </button>\n        <button className=\"btn-2\" onClick={this.onDeleteDone}>\n          Delete Done\n        </button>\n        <button className=\"btn-2\" onClick={this.onDeleteNotDone}>\n          Delete Not Done\n        </button>\n      </div>\n      <div className=\"tasks-container\">\n        {this.state.editMode === true && (\n          <div className=\"black\">\n            <div className=\"overlay\">\n              <input\n                type=\"text\"\n                value={this.state.editValue}\n                onChange={this.onEditHandle}\n              />\n              <Error error={this.state.editError} />\n              <button onClick={this.onEditClick}>Edit</button>\n              <button\n                className=\"btn-2\"\n                onClick={() => {\n                  this.setState({ editMode: false, editError: \"\" });\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        )}\n\n        <ul>\n          {this.state.tasks.map((task, index) => (\n            <li key={\"task\" + index}>\n              <Task\n                task={task}\n                index={index}\n                onCheck={(e) => this.onCheck(e)}\n                onEdit={(e) => this.onEdit(e)}\n                onDeleteTask={(e) => this.onDeleteTask(e)}\n                moveUp={(e) => {\n                  this.moveUp(e);\n                }}\n                moveDown={(e) => {\n                  this.moveDown(e);\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}